
lab_7_adc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000045c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a36  00000000  00000000  00000570  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000093e  00000000  00000000  00000fa6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000329  00000000  00000000  000018e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ec  00000000  00000000  00001c10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004a0  00000000  00000000  00001cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000015b  00000000  00000000  0000219c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000022f7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__vector_7>
  20:	0c 94 b4 00 	jmp	0x168	; 0x168 <__vector_8>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 66 00 	jmp	0xcc	; 0xcc <__vector_21>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  6c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  70:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  74:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  78:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  7c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  80:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  84:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  88:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  8c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  90:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  94:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  98:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  9c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  ac:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  b0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <main>
  c4:	0c 94 2c 02 	jmp	0x458	; 0x458 <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <__vector_21>:
#include <string.h>



ISR (ADC_vect)
{
  cc:	1f 92       	push	r1
  ce:	0f 92       	push	r0
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	0f 92       	push	r0
  d4:	11 24       	eor	r1, r1
  d6:	2f 93       	push	r18
  d8:	3f 93       	push	r19
  da:	4f 93       	push	r20
  dc:	5f 93       	push	r21
  de:	6f 93       	push	r22
  e0:	7f 93       	push	r23
  e2:	8f 93       	push	r24
  e4:	9f 93       	push	r25
  e6:	af 93       	push	r26
  e8:	bf 93       	push	r27
  ea:	ef 93       	push	r30
  ec:	ff 93       	push	r31
	uint16_t adc_value = ADC;
  ee:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  f2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	OCR2B = ((adc_value * OCR2A )/1024.0);
  f6:	20 91 b3 00 	lds	r18, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
  fa:	28 9f       	mul	r18, r24
  fc:	b0 01       	movw	r22, r0
  fe:	29 9f       	mul	r18, r25
 100:	70 0d       	add	r23, r0
 102:	11 24       	eor	r1, r1
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	0e 94 31 01 	call	0x262	; 0x262 <__floatunsisf>
 10c:	20 e0       	ldi	r18, 0x00	; 0
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	40 e8       	ldi	r20, 0x80	; 128
 112:	5a e3       	ldi	r21, 0x3A	; 58
 114:	0e 94 97 01 	call	0x32e	; 0x32e <__mulsf3>
 118:	0e 94 02 01 	call	0x204	; 0x204 <__fixunssfsi>
 11c:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	//storing in OCR2B for comparing
	
}
 120:	ff 91       	pop	r31
 122:	ef 91       	pop	r30
 124:	bf 91       	pop	r27
 126:	af 91       	pop	r26
 128:	9f 91       	pop	r25
 12a:	8f 91       	pop	r24
 12c:	7f 91       	pop	r23
 12e:	6f 91       	pop	r22
 130:	5f 91       	pop	r21
 132:	4f 91       	pop	r20
 134:	3f 91       	pop	r19
 136:	2f 91       	pop	r18
 138:	0f 90       	pop	r0
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	0f 90       	pop	r0
 13e:	1f 90       	pop	r1
 140:	18 95       	reti

00000142 <__vector_7>:

ISR(TIMER2_COMPA_vect)
{
 142:	1f 92       	push	r1
 144:	0f 92       	push	r0
 146:	0f b6       	in	r0, 0x3f	; 63
 148:	0f 92       	push	r0
 14a:	11 24       	eor	r1, r1
 14c:	8f 93       	push	r24
	if(OCR2B>0)
 14e:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
 152:	88 23       	and	r24, r24
 154:	19 f0       	breq	.+6      	; 0x15c <__vector_7+0x1a>
	PORTB |= (1<<5); //Turn on led
 156:	85 b1       	in	r24, 0x05	; 5
 158:	80 62       	ori	r24, 0x20	; 32
 15a:	85 b9       	out	0x05, r24	; 5
}
 15c:	8f 91       	pop	r24
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <__vector_8>:

ISR(TIMER2_COMPB_vect)
{
 168:	1f 92       	push	r1
 16a:	0f 92       	push	r0
 16c:	0f b6       	in	r0, 0x3f	; 63
 16e:	0f 92       	push	r0
 170:	11 24       	eor	r1, r1
 172:	8f 93       	push	r24
	PORTB &= ~(1<<5); //Turn off led
 174:	85 b1       	in	r24, 0x05	; 5
 176:	8f 7d       	andi	r24, 0xDF	; 223
 178:	85 b9       	out	0x05, r24	; 5
}
 17a:	8f 91       	pop	r24
 17c:	0f 90       	pop	r0
 17e:	0f be       	out	0x3f, r0	; 63
 180:	0f 90       	pop	r0
 182:	1f 90       	pop	r1
 184:	18 95       	reti

00000186 <adc_init>:

void adc_init(void)
{
	ADMUX |= (1 << REFS0)|(1<<MUX0);  //ADC1 port enabled
 186:	ec e7       	ldi	r30, 0x7C	; 124
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	81 64       	ori	r24, 0x41	; 65
 18e:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN) | (1 << ADATE) | (1 << ADIE) | (1 << ADPS1) | (1 <<ADPS0)|
 190:	ea e7       	ldi	r30, 0x7A	; 122
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	8f 6a       	ori	r24, 0xAF	; 175
 198:	80 83       	st	Z, r24
	(1<<ADPS2);
	ADCSRB |= (1 << ADTS1) | (1 << ADTS0);
 19a:	eb e7       	ldi	r30, 0x7B	; 123
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	83 60       	ori	r24, 0x03	; 3
 1a2:	80 83       	st	Z, r24
 1a4:	08 95       	ret

000001a6 <timer0>:
}

void timer0()
{
	
	TCCR0A |=(1<<WGM01); // CTC Mode
 1a6:	84 b5       	in	r24, 0x24	; 36
 1a8:	82 60       	ori	r24, 0x02	; 2
 1aa:	84 bd       	out	0x24, r24	; 36
	OCR0A = 109; //(6+1)*100 HZ
 1ac:	8d e6       	ldi	r24, 0x6D	; 109
 1ae:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A); //timer compare enabled
 1b0:	ee e6       	ldi	r30, 0x6E	; 110
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	82 60       	ori	r24, 0x02	; 2
 1b8:	80 83       	st	Z, r24
	TCCR0B |=(1<<CS02)|(1<<CS00); // 1024 prescaler
 1ba:	85 b5       	in	r24, 0x25	; 37
 1bc:	85 60       	ori	r24, 0x05	; 5
 1be:	85 bd       	out	0x25, r24	; 37
 1c0:	08 95       	ret

000001c2 <timer2>:
}

void timer2()
{
	
	TCCR2A |=(1<<WGM21); //Set CTC Mode Timer 2
 1c2:	e0 eb       	ldi	r30, 0xB0	; 176
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	80 81       	ld	r24, Z
 1c8:	82 60       	ori	r24, 0x02	; 2
 1ca:	80 83       	st	Z, r24
	OCR2A = 155;//(0+1)*100hz=10ms so 156-1
 1cc:	8b e9       	ldi	r24, 0x9B	; 155
 1ce:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	TIMSK2 |= (1<<OCIE2A) | (1<< OCIE2B);  //ISR COMPA and COMPB
 1d2:	e0 e7       	ldi	r30, 0x70	; 112
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	80 81       	ld	r24, Z
 1d8:	86 60       	ori	r24, 0x06	; 6
 1da:	80 83       	st	Z, r24
	TCCR2B |=(1<<CS22) | (1<<CS20); // 1024 pre scaler
 1dc:	e1 eb       	ldi	r30, 0xB1	; 177
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	85 60       	ori	r24, 0x05	; 5
 1e4:	80 83       	st	Z, r24
 1e6:	08 95       	ret

000001e8 <main>:
}

int main(void)
{
	DDRC = ~(1<<PINC1); //potentiometer input port redid y = pin 1    modulo 7%6=1
 1e8:	8d ef       	ldi	r24, 0xFD	; 253
 1ea:	87 b9       	out	0x07, r24	; 7
	DDRB |= (1<<5);
 1ec:	84 b1       	in	r24, 0x04	; 4
 1ee:	80 62       	ori	r24, 0x20	; 32
 1f0:	84 b9       	out	0x04, r24	; 4
	
	adc_init();
 1f2:	0e 94 c3 00 	call	0x186	; 0x186 <adc_init>
	
	
	timer0();
 1f6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <timer0>
	
	timer2();
 1fa:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <timer2>
	
	cli(); //clear global interrupts
 1fe:	f8 94       	cli
	sei(); //enable global interrupts
 200:	78 94       	sei
 202:	ff cf       	rjmp	.-2      	; 0x202 <main+0x1a>

00000204 <__fixunssfsi>:
 204:	0e 94 76 01 	call	0x2ec	; 0x2ec <__fp_splitA>
 208:	88 f0       	brcs	.+34     	; 0x22c <__fixunssfsi+0x28>
 20a:	9f 57       	subi	r25, 0x7F	; 127
 20c:	98 f0       	brcs	.+38     	; 0x234 <__fixunssfsi+0x30>
 20e:	b9 2f       	mov	r27, r25
 210:	99 27       	eor	r25, r25
 212:	b7 51       	subi	r27, 0x17	; 23
 214:	b0 f0       	brcs	.+44     	; 0x242 <__fixunssfsi+0x3e>
 216:	e1 f0       	breq	.+56     	; 0x250 <__fixunssfsi+0x4c>
 218:	66 0f       	add	r22, r22
 21a:	77 1f       	adc	r23, r23
 21c:	88 1f       	adc	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	1a f0       	brmi	.+6      	; 0x228 <__fixunssfsi+0x24>
 222:	ba 95       	dec	r27
 224:	c9 f7       	brne	.-14     	; 0x218 <__fixunssfsi+0x14>
 226:	14 c0       	rjmp	.+40     	; 0x250 <__fixunssfsi+0x4c>
 228:	b1 30       	cpi	r27, 0x01	; 1
 22a:	91 f0       	breq	.+36     	; 0x250 <__fixunssfsi+0x4c>
 22c:	0e 94 90 01 	call	0x320	; 0x320 <__fp_zero>
 230:	b1 e0       	ldi	r27, 0x01	; 1
 232:	08 95       	ret
 234:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_zero>
 238:	67 2f       	mov	r22, r23
 23a:	78 2f       	mov	r23, r24
 23c:	88 27       	eor	r24, r24
 23e:	b8 5f       	subi	r27, 0xF8	; 248
 240:	39 f0       	breq	.+14     	; 0x250 <__fixunssfsi+0x4c>
 242:	b9 3f       	cpi	r27, 0xF9	; 249
 244:	cc f3       	brlt	.-14     	; 0x238 <__fixunssfsi+0x34>
 246:	86 95       	lsr	r24
 248:	77 95       	ror	r23
 24a:	67 95       	ror	r22
 24c:	b3 95       	inc	r27
 24e:	d9 f7       	brne	.-10     	; 0x246 <__fixunssfsi+0x42>
 250:	3e f4       	brtc	.+14     	; 0x260 <__fixunssfsi+0x5c>
 252:	90 95       	com	r25
 254:	80 95       	com	r24
 256:	70 95       	com	r23
 258:	61 95       	neg	r22
 25a:	7f 4f       	sbci	r23, 0xFF	; 255
 25c:	8f 4f       	sbci	r24, 0xFF	; 255
 25e:	9f 4f       	sbci	r25, 0xFF	; 255
 260:	08 95       	ret

00000262 <__floatunsisf>:
 262:	e8 94       	clt
 264:	09 c0       	rjmp	.+18     	; 0x278 <__floatsisf+0x12>

00000266 <__floatsisf>:
 266:	97 fb       	bst	r25, 7
 268:	3e f4       	brtc	.+14     	; 0x278 <__floatsisf+0x12>
 26a:	90 95       	com	r25
 26c:	80 95       	com	r24
 26e:	70 95       	com	r23
 270:	61 95       	neg	r22
 272:	7f 4f       	sbci	r23, 0xFF	; 255
 274:	8f 4f       	sbci	r24, 0xFF	; 255
 276:	9f 4f       	sbci	r25, 0xFF	; 255
 278:	99 23       	and	r25, r25
 27a:	a9 f0       	breq	.+42     	; 0x2a6 <__floatsisf+0x40>
 27c:	f9 2f       	mov	r31, r25
 27e:	96 e9       	ldi	r25, 0x96	; 150
 280:	bb 27       	eor	r27, r27
 282:	93 95       	inc	r25
 284:	f6 95       	lsr	r31
 286:	87 95       	ror	r24
 288:	77 95       	ror	r23
 28a:	67 95       	ror	r22
 28c:	b7 95       	ror	r27
 28e:	f1 11       	cpse	r31, r1
 290:	f8 cf       	rjmp	.-16     	; 0x282 <__floatsisf+0x1c>
 292:	fa f4       	brpl	.+62     	; 0x2d2 <__floatsisf+0x6c>
 294:	bb 0f       	add	r27, r27
 296:	11 f4       	brne	.+4      	; 0x29c <__floatsisf+0x36>
 298:	60 ff       	sbrs	r22, 0
 29a:	1b c0       	rjmp	.+54     	; 0x2d2 <__floatsisf+0x6c>
 29c:	6f 5f       	subi	r22, 0xFF	; 255
 29e:	7f 4f       	sbci	r23, 0xFF	; 255
 2a0:	8f 4f       	sbci	r24, 0xFF	; 255
 2a2:	9f 4f       	sbci	r25, 0xFF	; 255
 2a4:	16 c0       	rjmp	.+44     	; 0x2d2 <__floatsisf+0x6c>
 2a6:	88 23       	and	r24, r24
 2a8:	11 f0       	breq	.+4      	; 0x2ae <__floatsisf+0x48>
 2aa:	96 e9       	ldi	r25, 0x96	; 150
 2ac:	11 c0       	rjmp	.+34     	; 0x2d0 <__floatsisf+0x6a>
 2ae:	77 23       	and	r23, r23
 2b0:	21 f0       	breq	.+8      	; 0x2ba <__floatsisf+0x54>
 2b2:	9e e8       	ldi	r25, 0x8E	; 142
 2b4:	87 2f       	mov	r24, r23
 2b6:	76 2f       	mov	r23, r22
 2b8:	05 c0       	rjmp	.+10     	; 0x2c4 <__floatsisf+0x5e>
 2ba:	66 23       	and	r22, r22
 2bc:	71 f0       	breq	.+28     	; 0x2da <__floatsisf+0x74>
 2be:	96 e8       	ldi	r25, 0x86	; 134
 2c0:	86 2f       	mov	r24, r22
 2c2:	70 e0       	ldi	r23, 0x00	; 0
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	2a f0       	brmi	.+10     	; 0x2d2 <__floatsisf+0x6c>
 2c8:	9a 95       	dec	r25
 2ca:	66 0f       	add	r22, r22
 2cc:	77 1f       	adc	r23, r23
 2ce:	88 1f       	adc	r24, r24
 2d0:	da f7       	brpl	.-10     	; 0x2c8 <__floatsisf+0x62>
 2d2:	88 0f       	add	r24, r24
 2d4:	96 95       	lsr	r25
 2d6:	87 95       	ror	r24
 2d8:	97 f9       	bld	r25, 7
 2da:	08 95       	ret

000002dc <__fp_split3>:
 2dc:	57 fd       	sbrc	r21, 7
 2de:	90 58       	subi	r25, 0x80	; 128
 2e0:	44 0f       	add	r20, r20
 2e2:	55 1f       	adc	r21, r21
 2e4:	59 f0       	breq	.+22     	; 0x2fc <__fp_splitA+0x10>
 2e6:	5f 3f       	cpi	r21, 0xFF	; 255
 2e8:	71 f0       	breq	.+28     	; 0x306 <__fp_splitA+0x1a>
 2ea:	47 95       	ror	r20

000002ec <__fp_splitA>:
 2ec:	88 0f       	add	r24, r24
 2ee:	97 fb       	bst	r25, 7
 2f0:	99 1f       	adc	r25, r25
 2f2:	61 f0       	breq	.+24     	; 0x30c <__fp_splitA+0x20>
 2f4:	9f 3f       	cpi	r25, 0xFF	; 255
 2f6:	79 f0       	breq	.+30     	; 0x316 <__fp_splitA+0x2a>
 2f8:	87 95       	ror	r24
 2fa:	08 95       	ret
 2fc:	12 16       	cp	r1, r18
 2fe:	13 06       	cpc	r1, r19
 300:	14 06       	cpc	r1, r20
 302:	55 1f       	adc	r21, r21
 304:	f2 cf       	rjmp	.-28     	; 0x2ea <__fp_split3+0xe>
 306:	46 95       	lsr	r20
 308:	f1 df       	rcall	.-30     	; 0x2ec <__fp_splitA>
 30a:	08 c0       	rjmp	.+16     	; 0x31c <__fp_splitA+0x30>
 30c:	16 16       	cp	r1, r22
 30e:	17 06       	cpc	r1, r23
 310:	18 06       	cpc	r1, r24
 312:	99 1f       	adc	r25, r25
 314:	f1 cf       	rjmp	.-30     	; 0x2f8 <__fp_splitA+0xc>
 316:	86 95       	lsr	r24
 318:	71 05       	cpc	r23, r1
 31a:	61 05       	cpc	r22, r1
 31c:	08 94       	sec
 31e:	08 95       	ret

00000320 <__fp_zero>:
 320:	e8 94       	clt

00000322 <__fp_szero>:
 322:	bb 27       	eor	r27, r27
 324:	66 27       	eor	r22, r22
 326:	77 27       	eor	r23, r23
 328:	cb 01       	movw	r24, r22
 32a:	97 f9       	bld	r25, 7
 32c:	08 95       	ret

0000032e <__mulsf3>:
 32e:	0e 94 aa 01 	call	0x354	; 0x354 <__mulsf3x>
 332:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_round>
 336:	0e 94 0d 02 	call	0x41a	; 0x41a <__fp_pscA>
 33a:	38 f0       	brcs	.+14     	; 0x34a <__mulsf3+0x1c>
 33c:	0e 94 14 02 	call	0x428	; 0x428 <__fp_pscB>
 340:	20 f0       	brcs	.+8      	; 0x34a <__mulsf3+0x1c>
 342:	95 23       	and	r25, r21
 344:	11 f0       	breq	.+4      	; 0x34a <__mulsf3+0x1c>
 346:	0c 94 04 02 	jmp	0x408	; 0x408 <__fp_inf>
 34a:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_nan>
 34e:	11 24       	eor	r1, r1
 350:	0c 94 91 01 	jmp	0x322	; 0x322 <__fp_szero>

00000354 <__mulsf3x>:
 354:	0e 94 6e 01 	call	0x2dc	; 0x2dc <__fp_split3>
 358:	70 f3       	brcs	.-36     	; 0x336 <__mulsf3+0x8>

0000035a <__mulsf3_pse>:
 35a:	95 9f       	mul	r25, r21
 35c:	c1 f3       	breq	.-16     	; 0x34e <__mulsf3+0x20>
 35e:	95 0f       	add	r25, r21
 360:	50 e0       	ldi	r21, 0x00	; 0
 362:	55 1f       	adc	r21, r21
 364:	62 9f       	mul	r22, r18
 366:	f0 01       	movw	r30, r0
 368:	72 9f       	mul	r23, r18
 36a:	bb 27       	eor	r27, r27
 36c:	f0 0d       	add	r31, r0
 36e:	b1 1d       	adc	r27, r1
 370:	63 9f       	mul	r22, r19
 372:	aa 27       	eor	r26, r26
 374:	f0 0d       	add	r31, r0
 376:	b1 1d       	adc	r27, r1
 378:	aa 1f       	adc	r26, r26
 37a:	64 9f       	mul	r22, r20
 37c:	66 27       	eor	r22, r22
 37e:	b0 0d       	add	r27, r0
 380:	a1 1d       	adc	r26, r1
 382:	66 1f       	adc	r22, r22
 384:	82 9f       	mul	r24, r18
 386:	22 27       	eor	r18, r18
 388:	b0 0d       	add	r27, r0
 38a:	a1 1d       	adc	r26, r1
 38c:	62 1f       	adc	r22, r18
 38e:	73 9f       	mul	r23, r19
 390:	b0 0d       	add	r27, r0
 392:	a1 1d       	adc	r26, r1
 394:	62 1f       	adc	r22, r18
 396:	83 9f       	mul	r24, r19
 398:	a0 0d       	add	r26, r0
 39a:	61 1d       	adc	r22, r1
 39c:	22 1f       	adc	r18, r18
 39e:	74 9f       	mul	r23, r20
 3a0:	33 27       	eor	r19, r19
 3a2:	a0 0d       	add	r26, r0
 3a4:	61 1d       	adc	r22, r1
 3a6:	23 1f       	adc	r18, r19
 3a8:	84 9f       	mul	r24, r20
 3aa:	60 0d       	add	r22, r0
 3ac:	21 1d       	adc	r18, r1
 3ae:	82 2f       	mov	r24, r18
 3b0:	76 2f       	mov	r23, r22
 3b2:	6a 2f       	mov	r22, r26
 3b4:	11 24       	eor	r1, r1
 3b6:	9f 57       	subi	r25, 0x7F	; 127
 3b8:	50 40       	sbci	r21, 0x00	; 0
 3ba:	9a f0       	brmi	.+38     	; 0x3e2 <__mulsf3_pse+0x88>
 3bc:	f1 f0       	breq	.+60     	; 0x3fa <__mulsf3_pse+0xa0>
 3be:	88 23       	and	r24, r24
 3c0:	4a f0       	brmi	.+18     	; 0x3d4 <__mulsf3_pse+0x7a>
 3c2:	ee 0f       	add	r30, r30
 3c4:	ff 1f       	adc	r31, r31
 3c6:	bb 1f       	adc	r27, r27
 3c8:	66 1f       	adc	r22, r22
 3ca:	77 1f       	adc	r23, r23
 3cc:	88 1f       	adc	r24, r24
 3ce:	91 50       	subi	r25, 0x01	; 1
 3d0:	50 40       	sbci	r21, 0x00	; 0
 3d2:	a9 f7       	brne	.-22     	; 0x3be <__mulsf3_pse+0x64>
 3d4:	9e 3f       	cpi	r25, 0xFE	; 254
 3d6:	51 05       	cpc	r21, r1
 3d8:	80 f0       	brcs	.+32     	; 0x3fa <__mulsf3_pse+0xa0>
 3da:	0c 94 04 02 	jmp	0x408	; 0x408 <__fp_inf>
 3de:	0c 94 91 01 	jmp	0x322	; 0x322 <__fp_szero>
 3e2:	5f 3f       	cpi	r21, 0xFF	; 255
 3e4:	e4 f3       	brlt	.-8      	; 0x3de <__mulsf3_pse+0x84>
 3e6:	98 3e       	cpi	r25, 0xE8	; 232
 3e8:	d4 f3       	brlt	.-12     	; 0x3de <__mulsf3_pse+0x84>
 3ea:	86 95       	lsr	r24
 3ec:	77 95       	ror	r23
 3ee:	67 95       	ror	r22
 3f0:	b7 95       	ror	r27
 3f2:	f7 95       	ror	r31
 3f4:	e7 95       	ror	r30
 3f6:	9f 5f       	subi	r25, 0xFF	; 255
 3f8:	c1 f7       	brne	.-16     	; 0x3ea <__mulsf3_pse+0x90>
 3fa:	fe 2b       	or	r31, r30
 3fc:	88 0f       	add	r24, r24
 3fe:	91 1d       	adc	r25, r1
 400:	96 95       	lsr	r25
 402:	87 95       	ror	r24
 404:	97 f9       	bld	r25, 7
 406:	08 95       	ret

00000408 <__fp_inf>:
 408:	97 f9       	bld	r25, 7
 40a:	9f 67       	ori	r25, 0x7F	; 127
 40c:	80 e8       	ldi	r24, 0x80	; 128
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	60 e0       	ldi	r22, 0x00	; 0
 412:	08 95       	ret

00000414 <__fp_nan>:
 414:	9f ef       	ldi	r25, 0xFF	; 255
 416:	80 ec       	ldi	r24, 0xC0	; 192
 418:	08 95       	ret

0000041a <__fp_pscA>:
 41a:	00 24       	eor	r0, r0
 41c:	0a 94       	dec	r0
 41e:	16 16       	cp	r1, r22
 420:	17 06       	cpc	r1, r23
 422:	18 06       	cpc	r1, r24
 424:	09 06       	cpc	r0, r25
 426:	08 95       	ret

00000428 <__fp_pscB>:
 428:	00 24       	eor	r0, r0
 42a:	0a 94       	dec	r0
 42c:	12 16       	cp	r1, r18
 42e:	13 06       	cpc	r1, r19
 430:	14 06       	cpc	r1, r20
 432:	05 06       	cpc	r0, r21
 434:	08 95       	ret

00000436 <__fp_round>:
 436:	09 2e       	mov	r0, r25
 438:	03 94       	inc	r0
 43a:	00 0c       	add	r0, r0
 43c:	11 f4       	brne	.+4      	; 0x442 <__fp_round+0xc>
 43e:	88 23       	and	r24, r24
 440:	52 f0       	brmi	.+20     	; 0x456 <__fp_round+0x20>
 442:	bb 0f       	add	r27, r27
 444:	40 f4       	brcc	.+16     	; 0x456 <__fp_round+0x20>
 446:	bf 2b       	or	r27, r31
 448:	11 f4       	brne	.+4      	; 0x44e <__fp_round+0x18>
 44a:	60 ff       	sbrs	r22, 0
 44c:	04 c0       	rjmp	.+8      	; 0x456 <__fp_round+0x20>
 44e:	6f 5f       	subi	r22, 0xFF	; 255
 450:	7f 4f       	sbci	r23, 0xFF	; 255
 452:	8f 4f       	sbci	r24, 0xFF	; 255
 454:	9f 4f       	sbci	r25, 0xFF	; 255
 456:	08 95       	ret

00000458 <_exit>:
 458:	f8 94       	cli

0000045a <__stop_program>:
 45a:	ff cf       	rjmp	.-2      	; 0x45a <__stop_program>
